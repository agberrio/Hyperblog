ARCHIVO DEMO

primer archivo para realizar pruebas de operatividad y funciones en GIT

Primero que todo GIT es un gestor de versiones, con el cual podremos desarrollar
multipls cambios sin perdernos entre versiones y poder sacar un Master (definitivo)
mas completo con todo lo mejor que hicimos o que deba llevar nuestro ARCHIVO
o desarrollo.

una vez tengamos instalado GIT en nuestro PC, solo debemos ubicarnos en la
carpeta desde la cual trabajaremos y le damos el siguiente comando

$ git init
<git init> nos indica que hemos iniciado un repositorio en la carpeta actual
dentro del directorio <oculto>

              L>  ".git" -->> donde encontramos la estructura interna de git

$ git status --> nos muestra el estado del repositorio dentro del directorio donde
  ejecutamos git

$ git add . --> añadir al repositorio todo el contenido del directorio
$ git add ["name"] --> añadir al repositorio por el nombre de archivo
$ git commit  --> agregar cambios al repositorio
              L>> nos lleva a VIM --> esc + I para insertar comentario y esc+shift+zz
                forzar la salida y guardar el comentario del commit
$ git commit -m [mensaje_recordatorio de cambios]


Config Commands

git config --> todas las configuraciones de git

git config --list --> Muestra la confirguracion por defecto de git

git config --list --show-origin --> donde estan guardadas las configuraciones

-----------------------

ANALISIS DE CAMBIOS

-----------------------

$ git show [name] --> nos muestra los cambios sobre los ultimos commits que
    realizamos a un archivo.


$ git diff [#commit1] [#commit2]

    L>> con este comando se pueden ver las diferencias entre dos versiones

$ git log --> nos permite ver el resumen de cambios del repositorio
$ git log --stat  --> Permite ver los cambios especificos que se han realizado
                      x archivo y contenido.




  ----------------------------------------------------------------------------
  ****************************************************************************
  ****************************************************************************
  ----------------------------------------------------------------------------

_______________________________________________________________________

  RESET Y CHECKOUT ---->> VOLVER EN EL TIEMPO ---->> RESET Y CHECKOUT
_______________________________________________________________________

RESET
***WARNING*** PUEDES BORRAR TODOS TUS CAMBIOS... PIENSA BIEN ANTES DE USARLO

$ git reset --> Nos permite volver a una versión anterior. para lo cual necesitamos
                el numero de commit al cual queremos regresar. (git log para ver)

$ git reset [#commit] --hard    ---> TODO VUELVE AL ESTADO ANTERIOR

$ git reset [#commit] --soft    ---> Volvemos al estado anterior, pero el STAGING
                                      se mantiene.

CHECKOUT
El checkout es una funcion que nos permite chequear versiones anteriores de un
archivo del repositorio.
***WARNING***
      Si hacemos un "git status" nos va a mostrar que realizamos cambios en el
      archivo, por lo cual si hicieramos un "git commit", borrariamos los cambios anteriores.


$ git checkout [#commit] [archive_name]
Nos permite chequear una version anterior de un archivo dentro del repositorio
Si queremos que los cambios sobre la vrsion de rescate sean permanentes:
$ git add .
$ git commit -m "msj"
De esta manera habremos rescatado una version anterior del archivo, realizado cambios
sobre esa version y realizado un commit para agragarlo como master a nuestro repositorio


$ git checkout master [archive_name]
Para volver a nuestra ultima version sin perder los cambios.
